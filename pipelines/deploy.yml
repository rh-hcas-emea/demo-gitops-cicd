apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: deploy
spec:
  workspaces:
  - name: source
  - name: scratch

  params:
  - name: app-name
    type: string
    description: Name of the application

  - name: image-url
    type: string
    description: Image url to deploy

  - name: image-tag
    type: string
    default: latest
    description: Image tag to deploy

  - name: environment
    type: string
    default: dev
    description: Environment to deploy to

  - name: git-url
    type: string
    description: URL of the git repository to update

  - name: git-branch
    type: string
    default: main
    description: Branch of the git repository

  tasks:
  - name: image-digest
    taskRef:
      name: image-digest
    params:
    - name: image
      value: docker://$(params.image-url):$(params.image-tag)

  - name: git-clone
    taskRef:
      name: git-clone
      kind: ClusterTask
    workspaces:
    - name: output
      workspace: source
    params:
    - name: url
      value: $(params.git-url)
    - name: revision
      value: $(params.git-branch)

  - name: tag-image
    taskRef:
      kind: ClusterTask
      name: skopeo-copy
    workspaces:
    - name: images-url
      workspace: scratch
    params:
    - name: srcImageURL
      value: docker://$(params.image-url):$(params.image-tag)
    - name: destImageURL
      value: docker://$(params.image-url):$(params.environment)

  - name: update-image-ref
    taskRef:
      name: kustomize
    runAfter:
    - git-clone
    - image-digest
    workspaces:
    - name: source
      workspace: source
    params:
    - name: args
      value: edit set image $(params.image-url)@$(tasks.image-digest.results.digest)
    - name: path
      value: $(workspaces.source.path)/environments/$(params.environment)

  - name: git-commit
    taskRef:
      name: git-cli
      kind: ClusterTask
    runAfter:
    - update-image-ref
    workspaces:
    - name: source
      workspace: source
    - name: input
      workspace: scratch
    params:
    - name: GIT_USER_NAME
      value: ci
    - name: GIT_USER_EMAIL
      value: ci@example.com
    - name: GIT_SCRIPT
      value: |
        git commit -am 'Deploy to $(params.environment)' -m '$(params.image-url)@$(tasks.image-digest.results.digest)' || true
        git tag $(params.environment)
        git push origin HEAD:$(params.git-branch)
        git push origin --tags --force

  - name: argo-sync
    taskRef:
      name: argocd-sync
    runAfter:
    - git-commit
    params:
    - name: argocd-version
      value: v2.2.5
    - name: application-name
      value: $(params.app-name)-$(params.environment)
    - name: revision
      value: $(params.git-branch)
    - name: flags
      value: --insecure

