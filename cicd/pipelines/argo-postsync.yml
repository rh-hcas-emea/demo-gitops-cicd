apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: argo-postsync
spec:
  workspaces:
    - name: source
  params:
    - name: image-url
      type: string
      description: |
        URL of the container image to promote.
        Should not have a tag or digest.

    - name: git-url
      type: string
      description: URL of the git repository containing kustomize manifests to update.

    - name: git-repo-full-name
      type: string
      description: The full repository name (e.g. `tektoncd/catalog`).

    - name: git-branch-default
      type: string
      default: main
      description: |
        Default branch of the git repository.
        This branch will be used for updates to dev & stage.
        The PR for prod will target this branch.

    - name: overlays-path
      type: string
      default: overlays
      description: Path to the directory containing the environment overlays.

    - name: environment
      type: string
      description: The environment that was just synced.

    - name: github-token-secret-name
      type: string
      default: github-demo-gitops-cicd-token
      description: Name of the Secret that contains the GitHub token for PR creation.

  # todo: include smoke tests, system tests, etc.
  tasks:

    ############# MOCK TEST TASKS #############
    - name: clone-tests
      taskRef:
        name: echo
      params:
        - name: args
          value:
            - 'Clone tests repo'

    - name: smoke-tests
      taskRef:
        name: echo
      runAfter:
        - clone-tests
      params:
        - name: args
          value:
            - 'Run smoke tests'

    - name: system-tests
      taskRef:
        name: echo
      runAfter:
        - smoke-tests
      when:
        - input: $(params.environment)
          operator: notin
          values: ['prod']
      params:
        - name: args
          value:
            - 'Run system tests'

    ############# UPDATE NEXT ENVIRONMENT #############

    # Note: None of these should be run when running the postsync for prod.
    #       To ensure compatibility with the `scope-when-expressions-to-task` setting,
    #       the `when` guard has been added to all the below tasks.

    - name: next-env
      taskRef:
        name: next-env
      when:
        - input: $(params.environment)
          operator: notin
          values: ['prod']
      params:
        - name: environment
          value: $(params.environment)

    - name: clone-k8s
      taskRef:
        name: git-clone
        kind: ClusterTask
      when:
        - input: $(params.environment)
          operator: notin
          values: ['prod']
      workspaces:
        - name: output
          workspace: source
      params:
        - name: url
          value: $(params.git-url)
        - name: revision
          value: $(params.git-branch-default)

    - name: get-digest
      taskRef:
        name: kustomize-get-digest
      runAfter:
        - clone-k8s
      when:
        - input: $(params.environment)
          operator: notin
          values: ['prod']
      workspaces:
        - name: input
          workspace: source
      params:
        - name: image-name
          value: $(params.image-url)
        - name: path
          value: $(params.overlays-path)/$(params.environment)

    - name: truncate-digest
      taskRef:
        name: truncate-string
      runAfter:
        - get-digest
      when:
        - input: $(params.environment)
          operator: notin
          values: ['prod']
      params:
        - name: input
          value: $(tasks.get-digest.results.digest)
        - name: start
          value: '8'
        - name: end
          value: '19'

    - name: get-branch
      taskRef:
        name: script
      runAfter:
        - truncate-digest
        - next-env
      when:
        - input: $(params.environment)
          operator: notin
          values: ['prod']
      params:
        - name: script
          value: |
            set -eux
            
            case "$(tasks.next-env.results.output)" in
              prod) echo -n "promote-$(tasks.truncate-digest.results.output)-prod" > $(results.output.path) ;;
              *) echo -n "$(params.git-branch-default)" > $(results.output.path) ;;
            esac

    - name: update-image
      taskRef:
        name: kustomize-set-image
      runAfter:
        - system-tests
        - get-branch
      when:
        - input: $(params.environment)
          operator: notin
          values: ['prod']
      workspaces:
        - name: source
          workspace: source
      params:
        - name: image-url
          value: $(params.image-url)@$(tasks.get-digest.results.digest)
        - name: path
          value: $(params.overlays-path)/$(tasks.next-env.results.output)
        - name: git-branch
          value: $(tasks.get-branch.results.output)
        - name: git-message
          value: &msg Promote $(tasks.truncate-digest.results.output) to $(tasks.next-env.results.output)

    - name: open-pr
      taskRef:
        name: github-open-pr
      runAfter:
        - update-image
      when:
        - input: $(tasks.next-env.results.output)
          operator: in
          values: ['prod']
        - input: $(params.environment)
          operator: notin
          values: ['prod']
      params:
        - name: REPO_FULL_NAME
          value: $(params.git-repo-full-name)
        - name: HEAD
          value: $(tasks.get-branch.results.output)
        - name: BASE
          value: $(params.git-branch-default)
        - name: TITLE
          value: *msg
        - name: BODY
          value: ''
        - name: GITHUB_TOKEN_SECRET_NAME
          value: $(params.github-token-secret-name)

