apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: kustomize-get-digest
spec:
  description: |-
    This task can be used to find the digest of a given image from a kustomization file.
    This could then be used to promote an image between environment overlays.
    
    **Note:** Since the digest is merely extracted from the YAML using [yq](https://mikefarah.gitbook.io/yq/), the digest will need to be present in the kustomization file for this to be successful.
    E.g.
    ```
    images:
      - name: registry.access.redhat.com/ubi8
        digest: sha256:6edca3916b34d10481e4d24d14ebe6ebc6db517bec1b2db6ae2d7d47c2ecfaee
    ```

  params:
    - name: image-name
      type: string
      description: >-
        The name of the image to find the digest for.
        It should match the value in `images[].name`.

    - name: path
      type: string
      default: .
      description: >-
        The directory within which the kustomization file is located.
        Should be relative to the `source` workspace.

    # Note: for most people the default should be `kustomization.yaml`
    #       I just have a preference for `.yml`
    - name: filename
      type: string
      default: kustomization.yml
      description: The filename of the kustomization file.

    - name: yq-image
      type: string
      default: docker.io/mikefarah/yq:4.25.2
      description: The image used to run yq.

  results:
    - name: digest
      description: The digest of the image.

  workspaces:
    - name: source
      description: A workspace that contains kustomizations.

  steps:
    - name: yq
      image: $(params.yq-image)
      workingDir: $(workspaces.source.path)
      env:
        - name: KUSTOMIZATION_FILE
          value: $(params.path)/$(params.filename)
        - name: IMAGE_NAME
          value: $(params.image-name)
      script: |
        #!/usr/bin/env sh
        set -eux

        yq ".images[] | select(.name == \"$IMAGE_NAME\") | .digest" < "$KUSTOMIZATION_FILE" \
          | tr -d '\n' \
          | tee '$(results.digest.path)'


